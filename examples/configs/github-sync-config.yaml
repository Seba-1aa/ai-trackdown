# AI Trackdown Configuration Template with GitHub Integration
# For teams using GitHub as their primary development platform
# Copy this template to your AI-TRACKDOWN.md file and customize

version: 1
project:
  name: "GitHub Integrated Project"
  id_prefix: "GH"
  default_epic_budget: 25000

# Manual GitHub Issues integration patterns
integration_patterns:
  github:
    manual_sync: true
    repo: "your-org/your-repo"
    workflow: "copy_and_paste_integration"
    
    # Manual field mapping guidelines
    mapping_guidelines:
      issue:
        title: "Copy title from AI Trackdown task"
        body: |
          Copy description from AI Trackdown task
          
          ## Acceptance Criteria
          Copy acceptance criteria from task
          
          ## AI Context
          Reference AI Trackdown task ID
        labels: "Manually apply corresponding labels"
        assignee: "Manually assign GitHub user"
        milestone: "Link to corresponding epic milestone"
    
    # Manual sync process
    sync_process:
      directions: ["export_to_github", "import_status_updates"]
      include_types: ["issue", "task"]  
      exclude_labels: ["no-sync"]
      frequency: "weekly_manual_sync"

# Enhanced AI configuration for development teams
ai:
  token_tracking:
    manual_tracking: true
    require_agent_id: true
    budget_alerts: "manual_review_process"
    
  providers:
    claude:
      model: "claude-3.5-sonnet"
      cost_per_1k_input: 0.003
      cost_per_1k_output: 0.015
      
    gpt4:
      model: "gpt-4-turbo"
      cost_per_1k_input: 0.01
      cost_per_1k_output: 0.03
      
    copilot:
      model: "github-copilot"
      cost_per_1k_input: 0.002
      cost_per_1k_output: 0.004

  usage_guidelines:
    claude:
      max_tokens_per_task: 5000
      recommended_use: ["architecture", "documentation", "code_review"]
    
    gpt4:
      max_tokens_per_task: 4000
      recommended_use: ["coding", "debugging"]

# Git workflow integration
git:
  commit_conventions:
    task_references: true
    token_reporting: true
    branch_naming: false
  
  patterns:
    commit_task_ref: "\\b(EPIC|ISSUE|TASK)-\\d+\\b"
    status_keywords:
      in_progress: ["start", "begin", "wip"]
      in_review: ["review", "pr", "merge"]
      done: ["fix", "close", "resolve", "complete"]

# Manual workflow processes
workflow_processes:
  status_updates:
    - trigger: "commit_with_task_ref"
      pattern: "fix\\((.+)\\):"
      manual_action: "update_task_status_to_in_review"